name: CI/CD - Deploy Strapi on ECS Fargate with Terraform

on:
  push:
    branches:
      - main  # Trigger on main branch push

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}  # Make sure to set region in Terraform variables
  ALB_PUBLIC_URL_OUTPUT: alb_public_url  # This will be the output from Terraform

jobs:
  deploy:
    name: Build Docker Image, Push to ECR & Deploy Infra with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker Image
      run: |
        # Debug Docker Build
        echo "Building Docker image for repository: $ECR_REPOSITORY"
        docker build -t $ECR_REPOSITORY:latest -f docker/Dockerfile .
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "Docker image tagged as: $ECR_REGISTRY/$ECR_REPOSITORY:latest"

    - name: Push Docker Image to ECR
      run: |
        echo "Pushing Docker image to ECR"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: |
        cd terraform # Change to the directory containing the .tf files
        terraform init

    - name: Terraform Validate
      run: |
        cd terraform # Change to the directory containing the .tf files
        terraform validate

    - name: Terraform Plan
      run: |
        cd terraform # Change to the directory containing the .tf files
        terraform plan

    - name: Terraform Apply
      run: |
        cd terraform # Change to the directory containing the .tf files
        terraform apply -auto-approve -no-color

    - name: Output Public ALB URL
      id: alb_url
      run: |
        cd terraform # Change to the directory containing the .tf files
        ALB_URL=$(terraform output -raw alb_public_url)
        echo "ALB Public URL: $ALB_URL"
        echo "ALB_URL=$ALB_URL" >> $GITHUB_ENV  # Set the output in GitHub environment variable

    - name: Notify with Public ALB URL
      run: |
        echo "Strapi is now deployed! Access the Strapi application at the following public URL: ${{ env.ALB_URL }}"
